/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.zeninfor.chager.v2;

import com.google.gson.Gson;
import com.zeninfor.chager.LogFrame;
import com.zeninfor.chager.v2.utils.DataUtils;
import com.zeninfor.chager.v2.utils.FileUtils;
import com.zeninfor.tool.DeviceSocketStatus;
import com.zeninfor.tool.MessageUtils;
import com.zeninfor.tool.MqClient;
import com.zeninfor.tool.StringUtils;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.eclipse.paho.client.mqttv3.MqttException;

/**
 *
 * @author WY
 */
public class ChargerFrame extends javax.swing.JFrame {

    /**
     * Creates new form EmulatorFrame
     */
    public ChargerFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInfo = new javax.swing.JLabel();
        connectPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        btnDisconnect = new javax.swing.JButton();
        button_panel = new javax.swing.JPanel();
        socket_panel = new javax.swing.JPanel();
        socket_3 = new javax.swing.JButton();
        socket_4 = new javax.swing.JButton();
        socket_5 = new javax.swing.JButton();
        socket_6 = new javax.swing.JButton();
        socket_7 = new javax.swing.JButton();
        socket_8 = new javax.swing.JButton();
        socket_9 = new javax.swing.JButton();
        socket_10 = new javax.swing.JButton();
        socket_2 = new javax.swing.JButton();
        socket_1 = new javax.swing.JButton();
        power_panel = new javax.swing.JPanel();
        power_1 = new javax.swing.JButton();
        power_2 = new javax.swing.JButton();
        power_6 = new javax.swing.JButton();
        power_5 = new javax.swing.JButton();
        power_4 = new javax.swing.JButton();
        power_3 = new javax.swing.JButton();
        power_10 = new javax.swing.JButton();
        power_9 = new javax.swing.JButton();
        power_8 = new javax.swing.JButton();
        power_7 = new javax.swing.JButton();
        fuchong_3 = new javax.swing.JButton();
        fuchong_2 = new javax.swing.JButton();
        fuchong_1 = new javax.swing.JButton();
        fuchong_4 = new javax.swing.JButton();
        fuchong_5 = new javax.swing.JButton();
        fuchong_6 = new javax.swing.JButton();
        fuchong_8 = new javax.swing.JButton();
        fuchong_7 = new javax.swing.JButton();
        fuchong_9 = new javax.swing.JButton();
        fuchong_10 = new javax.swing.JButton();
        duanlu_1 = new javax.swing.JButton();
        duanlu_2 = new javax.swing.JButton();
        duanlu_3 = new javax.swing.JButton();
        duanlu_4 = new javax.swing.JButton();
        duanlu_5 = new javax.swing.JButton();
        duanlu_6 = new javax.swing.JButton();
        duanlu_7 = new javax.swing.JButton();
        duanlu_8 = new javax.swing.JButton();
        duanlu_9 = new javax.swing.JButton();
        duanlu_10 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtChargerNumber = new javax.swing.JTextField();
        qcodeBtn = new javax.swing.JButton();
        butLog = new javax.swing.JButton();
        duanlu_panel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemConfig = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        txtInfo.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N

        connectPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel2.setText("UserName:");

        jLabel3.setText("Password:");

        btnConnect.setBackground(new java.awt.Color(204, 204, 204));
        btnConnect.setText("连 接");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        jLabel4.setText("Host:");

        txtHost.setText("tcp://106.14.95.2:1883");

        btnDisconnect.setBackground(new java.awt.Color(204, 204, 204));
        btnDisconnect.setText("断 开");
        btnDisconnect.setEnabled(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout connectPanelLayout = new javax.swing.GroupLayout(connectPanel);
        connectPanel.setLayout(connectPanelLayout);
        connectPanelLayout.setHorizontalGroup(
            connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectPanelLayout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnConnect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDisconnect)
                .addGap(33, 33, 33))
        );
        connectPanelLayout.setVerticalGroup(
            connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnConnect)
                        .addComponent(btnDisconnect)
                        .addComponent(jLabel2))))
        );

        socket_3.setBackground(new java.awt.Color(204, 204, 204));
        socket_3.setText("3");
        socket_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_3ActionPerformed(evt);
            }
        });

        socket_4.setText("4");
        socket_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_4ActionPerformed(evt);
            }
        });

        socket_5.setText("5");
        socket_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_5ActionPerformed(evt);
            }
        });

        socket_6.setText("6");
        socket_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_6ActionPerformed(evt);
            }
        });

        socket_7.setText("7");
        socket_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_7ActionPerformed(evt);
            }
        });

        socket_8.setText("8");
        socket_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_8ActionPerformed(evt);
            }
        });

        socket_9.setText("9");
        socket_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_9ActionPerformed(evt);
            }
        });

        socket_10.setText("10");
        socket_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_10ActionPerformed(evt);
            }
        });

        socket_2.setBackground(new java.awt.Color(204, 204, 204));
        socket_2.setText("2");
        socket_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_2ActionPerformed(evt);
            }
        });

        socket_1.setBackground(new java.awt.Color(204, 204, 204));
        socket_1.setText("1");
        socket_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socket_1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout socket_panelLayout = new javax.swing.GroupLayout(socket_panel);
        socket_panel.setLayout(socket_panelLayout);
        socket_panelLayout.setHorizontalGroup(
            socket_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(socket_panelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(socket_1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(socket_2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(socket_3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(socket_4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(socket_5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(socket_6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(socket_7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(socket_8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(socket_9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(socket_10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        socket_panelLayout.setVerticalGroup(
            socket_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(socket_panelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(socket_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(socket_3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(socket_2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        power_1.setText("Power");
        power_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_1ActionPerformed(evt);
            }
        });

        power_2.setText("Power");
        power_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_2ActionPerformed(evt);
            }
        });

        power_6.setText("Power");
        power_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_6ActionPerformed(evt);
            }
        });

        power_5.setText("Power");
        power_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_5ActionPerformed(evt);
            }
        });

        power_4.setText("Power");
        power_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_4ActionPerformed(evt);
            }
        });

        power_3.setText("Power");
        power_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_3ActionPerformed(evt);
            }
        });

        power_10.setText("Power");
        power_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_10ActionPerformed(evt);
            }
        });

        power_9.setText("Power");
        power_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_9ActionPerformed(evt);
            }
        });

        power_8.setText("Power");
        power_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_8ActionPerformed(evt);
            }
        });

        power_7.setText("Power");
        power_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                power_7ActionPerformed(evt);
            }
        });

        fuchong_3.setText("浮充");
        fuchong_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_3ActionPerformed(evt);
            }
        });

        fuchong_2.setText("浮充");
        fuchong_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_2ActionPerformed(evt);
            }
        });

        fuchong_1.setText("浮充");
        fuchong_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_1ActionPerformed(evt);
            }
        });

        fuchong_4.setText("浮充");
        fuchong_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_4ActionPerformed(evt);
            }
        });

        fuchong_5.setText("浮充");
        fuchong_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_5ActionPerformed(evt);
            }
        });

        fuchong_6.setText("浮充");
        fuchong_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_6ActionPerformed(evt);
            }
        });

        fuchong_8.setText("浮充");
        fuchong_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_8ActionPerformed(evt);
            }
        });

        fuchong_7.setText("浮充");
        fuchong_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_7ActionPerformed(evt);
            }
        });

        fuchong_9.setText("浮充");
        fuchong_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_9ActionPerformed(evt);
            }
        });

        fuchong_10.setText("浮充");
        fuchong_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuchong_10ActionPerformed(evt);
            }
        });

        duanlu_1.setText("短路");
        duanlu_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_1ActionPerformed(evt);
            }
        });

        duanlu_2.setText("短路");
        duanlu_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_2ActionPerformed(evt);
            }
        });

        duanlu_3.setText("短路");
        duanlu_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_3ActionPerformed(evt);
            }
        });

        duanlu_4.setText("短路");
        duanlu_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_4ActionPerformed(evt);
            }
        });

        duanlu_5.setText("短路");
        duanlu_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_5ActionPerformed(evt);
            }
        });

        duanlu_6.setText("短路");
        duanlu_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_6ActionPerformed(evt);
            }
        });

        duanlu_7.setText("短路");
        duanlu_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_7ActionPerformed(evt);
            }
        });

        duanlu_8.setText("短路");
        duanlu_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_8ActionPerformed(evt);
            }
        });

        duanlu_9.setText("短路");
        duanlu_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_9ActionPerformed(evt);
            }
        });

        duanlu_10.setText("短路");
        duanlu_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duanlu_10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout power_panelLayout = new javax.swing.GroupLayout(power_panel);
        power_panel.setLayout(power_panelLayout);
        power_panelLayout.setHorizontalGroup(
            power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(power_panelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fuchong_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(duanlu_1))
                    .addComponent(power_1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fuchong_2)
                    .addComponent(power_2)
                    .addComponent(duanlu_2))
                .addGap(48, 48, 48)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(power_3)
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fuchong_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(duanlu_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(54, 54, 54)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fuchong_4)
                    .addComponent(power_4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duanlu_4))
                .addGap(45, 45, 45)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fuchong_5)
                    .addComponent(duanlu_5)
                    .addComponent(power_5))
                .addGap(50, 50, 50)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(power_6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(fuchong_6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(duanlu_6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(42, 42, 42)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fuchong_7)
                    .addComponent(duanlu_7)
                    .addComponent(power_7))
                .addGap(41, 41, 41)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fuchong_8)
                    .addComponent(duanlu_8)
                    .addComponent(power_8))
                .addGap(58, 58, 58)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fuchong_9)
                    .addComponent(duanlu_9)
                    .addComponent(power_9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(duanlu_10)
                    .addComponent(fuchong_10)
                    .addComponent(power_10))
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, power_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        power_panelLayout.setVerticalGroup(
            power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(power_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addComponent(power_1)
                        .addGap(23, 23, 23)
                        .addComponent(fuchong_1)
                        .addGap(18, 18, 18)
                        .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duanlu_2)
                            .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(duanlu_1)
                                .addComponent(duanlu_3))))
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addComponent(power_9)
                        .addGap(23, 23, 23)
                        .addComponent(fuchong_9))
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addComponent(power_5)
                        .addGap(23, 23, 23)
                        .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fuchong_5)
                            .addComponent(fuchong_4))
                        .addGap(18, 18, 18)
                        .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(duanlu_5)
                            .addComponent(duanlu_4)))
                    .addComponent(power_4)
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addComponent(power_2)
                        .addGap(23, 23, 23)
                        .addComponent(fuchong_2))
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(power_7)
                            .addComponent(power_8))
                        .addGap(23, 23, 23)
                        .addComponent(fuchong_7))
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addComponent(power_10)
                        .addGap(23, 23, 23)
                        .addComponent(fuchong_10)
                        .addGap(18, 18, 18)
                        .addComponent(duanlu_10))
                    .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(power_panelLayout.createSequentialGroup()
                            .addComponent(fuchong_8)
                            .addGap(18, 18, 18)
                            .addComponent(duanlu_8))
                        .addGroup(power_panelLayout.createSequentialGroup()
                            .addComponent(power_6)
                            .addGap(23, 23, 23)
                            .addComponent(fuchong_6)
                            .addGap(18, 18, 18)
                            .addGroup(power_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(duanlu_6)
                                .addComponent(duanlu_7)
                                .addComponent(duanlu_9))))
                    .addComponent(power_3)
                    .addGroup(power_panelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(fuchong_3)))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jLabel1.setText("电站编号：");

        qcodeBtn.setText("生成二维码");
        qcodeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qcodeBtnActionPerformed(evt);
            }
        });

        butLog.setBackground(new java.awt.Color(204, 204, 204));
        butLog.setText("Log");
        butLog.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout button_panelLayout = new javax.swing.GroupLayout(button_panel);
        button_panel.setLayout(button_panelLayout);
        button_panelLayout.setHorizontalGroup(
            button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(button_panelLayout.createSequentialGroup()
                .addGap(466, 466, 466)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtChargerNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qcodeBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, button_panelLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(power_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, button_panelLayout.createSequentialGroup()
                        .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(button_panelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(socket_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)))
                .addGap(1135, 1135, 1135))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, button_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butLog)
                .addGap(1123, 1123, 1123))
        );
        button_panelLayout.setVerticalGroup(
            button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(button_panelLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(socket_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(power_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtChargerNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qcodeBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(butLog)
                .addGap(28, 28, 28))
        );

        duanlu_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jMenu1.setText("配置");

        menuItemConfig.setText("参数配置");
        jMenu1.add(menuItemConfig);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(txtInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(connectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(168, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(button_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 1242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(duanlu_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 1267, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(duanlu_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtInfo))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        if(initConnectInfo()){        
            if(client.connect()){
                this.btnConnect.setEnabled(false);
                this.btnDisconnect.setEnabled(true);
                JOptionPane.showMessageDialog(null, "连接服务器成功！", "提示消息",JOptionPane.INFORMATION_MESSAGE); 
                //初始化插座位
                Gson gson = new Gson();
                String json = FileUtils.readTxtFile(this.txtUserName.getText()+".txt");
                if(StringUtils.isNotBlack(json)){
                    Map<String,Map> dataMap = gson.fromJson(json, Map.class);
                    if(dataMap != null && dataMap.get("statusMap") != null){
                        Map<Integer,Integer> statusMap = dataMap.get("status");
                        deviceStatus = statusMap;
                    }
                    if(dataMap != null && dataMap.get("electricalMap") != null){
                        Map<Integer,Boolean> electricalMap = dataMap.get("electricalMap");
                        DataUtils.electricalStatus = electricalMap;
                    }
                    //同步状态
                    initSocketButtonColor();
                }else{
                    initSocketStatus();
                }
                //初始化上报设备状态线程
                upstreamDeviceStatus();
                ChargerFrame.isConnected = true;
            }else{
                JOptionPane.showMessageDialog(null, "连接服务器失败，请确认连接信息！", "提示消息",JOptionPane.ERROR_MESSAGE); 
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        // TODO add your handling code here:
        client.disconnect();
        //清除状态数据
        deviceStatus.clear();
        
        this.btnConnect.setEnabled(true);
        this.btnDisconnect.setEnabled(false);
        //取消选择
        //上发状态线程停止
        threadFlag = false;
        ChargerFrame.isConnected = false;
        JOptionPane.showMessageDialog(null, "连接已断开！", "提示消息",JOptionPane.INFORMATION_MESSAGE); 
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if(isConnected){
            Gson gson = new Gson();
            Map<String,Map> dataMap = new HashMap();
            dataMap.put("statusMap", ChargerFrame.deviceStatus);
            dataMap.put("statusMap", DataUtils.electricalStatus);
            String json = gson.toJson(dataMap);
            FileUtils.writeTxtFile(this.txtUserName.getText()+".txt",json);
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    private void butLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLogActionPerformed
        // TODO add your handling code here:
        if(logFrame.isVisible()){
            //防止小化了
            logFrame.setExtendedState(Frame.NORMAL);
            //激活窗体
            logFrame.toFront();
        }else{
            logFrame.setLocationRelativeTo(null);
            logFrame.setVisible(true);
        }
    }//GEN-LAST:event_butLogActionPerformed

    private void socket_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_2ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_2,2);
    }//GEN-LAST:event_socket_2ActionPerformed

    private void socket_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_1ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_1,1);
    }//GEN-LAST:event_socket_1ActionPerformed

    private void duanlu_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_10ActionPerformed
        // TODO add your handling code here:
        duanlu(10);
    }//GEN-LAST:event_duanlu_10ActionPerformed

    private void duanlu_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_9ActionPerformed
        // TODO add your handling code here:
        duanlu(9);
    }//GEN-LAST:event_duanlu_9ActionPerformed

    private void duanlu_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_7ActionPerformed
        // TODO add your handling code here:
        duanlu(7);
    }//GEN-LAST:event_duanlu_7ActionPerformed

    private void duanlu_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_6ActionPerformed
        // TODO add your handling code here:
        duanlu(6);
    }//GEN-LAST:event_duanlu_6ActionPerformed

    private void duanlu_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_5ActionPerformed
        // TODO add your handling code here:
        duanlu(5);
    }//GEN-LAST:event_duanlu_5ActionPerformed

    private void duanlu_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_4ActionPerformed
        // TODO add your handling code here:
        duanlu(4);
    }//GEN-LAST:event_duanlu_4ActionPerformed

    private void duanlu_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_3ActionPerformed
        // TODO add your handling code here:
        duanlu(3);
    }//GEN-LAST:event_duanlu_3ActionPerformed

    private void duanlu_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_2ActionPerformed
        // TODO add your handling code here:
        duanlu(2);
    }//GEN-LAST:event_duanlu_2ActionPerformed

    private void duanlu_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_1ActionPerformed
        // TODO add your handling code here:
        duanlu(1);
    }//GEN-LAST:event_duanlu_1ActionPerformed

    private void fuchong_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_10ActionPerformed
        // TODO add your handling code here:
        fuchong(10);
    }//GEN-LAST:event_fuchong_10ActionPerformed

    private void fuchong_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_9ActionPerformed
        // TODO add your handling code here:
        fuchong(9);
    }//GEN-LAST:event_fuchong_9ActionPerformed

    private void fuchong_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_7ActionPerformed
        // TODO add your handling code here:
        fuchong(7);
    }//GEN-LAST:event_fuchong_7ActionPerformed

    private void fuchong_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_8ActionPerformed
        // TODO add your handling code here:
        fuchong(8);
    }//GEN-LAST:event_fuchong_8ActionPerformed

    private void fuchong_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_6ActionPerformed
        // TODO add your handling code here:
        fuchong(6);
    }//GEN-LAST:event_fuchong_6ActionPerformed

    private void fuchong_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_5ActionPerformed
        // TODO add your handling code here:
        fuchong(5);
    }//GEN-LAST:event_fuchong_5ActionPerformed

    private void fuchong_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_4ActionPerformed
        // TODO add your handling code here:
        fuchong(4);
    }//GEN-LAST:event_fuchong_4ActionPerformed

    private void fuchong_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_1ActionPerformed
        // TODO add your handling code here:
        fuchong(1);
    }//GEN-LAST:event_fuchong_1ActionPerformed

    private void fuchong_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_2ActionPerformed
        // TODO add your handling code here:
        fuchong(2);
    }//GEN-LAST:event_fuchong_2ActionPerformed

    private void fuchong_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuchong_3ActionPerformed
        // TODO add your handling code here:
        fuchong(3);
    }//GEN-LAST:event_fuchong_3ActionPerformed

    private void power_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_7ActionPerformed
        // TODO add your handling code here:
        setPower(power_7,7);
    }//GEN-LAST:event_power_7ActionPerformed

    private void power_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_8ActionPerformed
        // TODO add your handling code here:
        setPower(power_8,8);
    }//GEN-LAST:event_power_8ActionPerformed

    private void power_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_9ActionPerformed
        // TODO add your handling code here:
        setPower(power_9,9);
    }//GEN-LAST:event_power_9ActionPerformed

    private void power_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_10ActionPerformed
        // TODO add your handling code here:
        setPower(power_10,10);
    }//GEN-LAST:event_power_10ActionPerformed

    private void power_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_3ActionPerformed
        // TODO add your handling code here:
        setPower(power_3,3);
    }//GEN-LAST:event_power_3ActionPerformed

    private void power_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_4ActionPerformed
        // TODO add your handling code here:
        setPower(power_4,4);
    }//GEN-LAST:event_power_4ActionPerformed

    private void power_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_5ActionPerformed
        // TODO add your handling code here:
        setPower(power_5,5);
    }//GEN-LAST:event_power_5ActionPerformed

    private void power_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_6ActionPerformed
        // TODO add your handling code here:
        setPower(power_6,6);
    }//GEN-LAST:event_power_6ActionPerformed

    private void power_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_2ActionPerformed
        // TODO add your handling code here:
        setPower(power_2,2);
    }//GEN-LAST:event_power_2ActionPerformed

    private void power_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_power_1ActionPerformed
        // TODO add your handling code here:
        setPower(power_1,1);
    }//GEN-LAST:event_power_1ActionPerformed

    private void socket_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_10ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_10,10);
    }//GEN-LAST:event_socket_10ActionPerformed

    private void socket_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_9ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_9,9);
    }//GEN-LAST:event_socket_9ActionPerformed

    private void socket_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_8ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_8,8);
    }//GEN-LAST:event_socket_8ActionPerformed

    private void socket_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_7ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_7,7);
    }//GEN-LAST:event_socket_7ActionPerformed

    private void socket_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_6ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_6,6);
    }//GEN-LAST:event_socket_6ActionPerformed

    private void socket_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_5ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_5,5);
    }//GEN-LAST:event_socket_5ActionPerformed

    private void socket_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_4ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_4,4);
    }//GEN-LAST:event_socket_4ActionPerformed

    private void socket_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socket_3ActionPerformed
        // TODO add your handling code here:
        clickSocketButton(socket_3,3);
    }//GEN-LAST:event_socket_3ActionPerformed

    private void duanlu_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duanlu_8ActionPerformed
        // TODO add your handling code here:
        duanlu(8);
    }//GEN-LAST:event_duanlu_8ActionPerformed

    private void qcodeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qcodeBtnActionPerformed
        // TODO add your handling code here:
        showCode(txtChargerNumber.getText());
    }//GEN-LAST:event_qcodeBtnActionPerformed

    /**
     * 变以绿色
     * @param btn 
     */
    public void setButtonColor(Integer num,Color color){
        JButton btn = null;
        //改变按钮状态
        switch(num){
            case 1:
                btn = socket_1;
                break;
            case 2:
                btn = socket_2;
                break;
            case 3:
                btn = socket_3;
                break;
           case 4:
                btn = socket_4;
                break;
           case 5:
                btn = socket_5;
                break;
            case 6:
                btn = socket_6;
                break;
            case 7:
                btn = socket_7;
                break;
           case 8:
                btn = socket_8;
                break;
           case 9:
                btn = socket_9;
                break;
           case 10:
                btn = socket_10;
                break;
        }
        if(btn != null){
            btn.setBackground(color);
        }
    }
    
    
    /**
     * 修改用电器接入状态
     * @param num 
     */
    public void clickSocketButton(JButton btn,Integer num){
        if(!isConnected){
            JOptionPane.showMessageDialog(null, "未连接服务器！", "提示消息",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
        if(DataUtils.electricalStatus.get(num)){
            DataUtils.electricalStatus.put(num, false);
            //改变按钮状态
            btn.setBackground(backColor);
            //判断是否有在充电（如果有就修改为充电结束，否则就空闲）
            if(deviceStatus.get(num) != null && (deviceStatus.get(num) == 2 || deviceStatus.get(num) == 3)){
                deviceStatus.put(num, DataUtils.LOAD_OUT);
            }
        }else{
            DataUtils.electricalStatus.put(num, true);
            //改变按钮状态
            btn.setBackground(accessColor);
        }
        
    }
    
    /**
     * 设置功率值
     * @param btn
     * @param num
     * @param power 
     */
    public void setPower(JButton btn,Integer num) {
        if(!isConnected){
            JOptionPane.showMessageDialog(null, "未连接服务器！", "提示消息",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
        String str = (String) JOptionPane.showInputDialog(null, "请输入功率值：\n", "Power", JOptionPane.PLAIN_MESSAGE, null, null,
                "80");
        try{
            Integer power = Integer.valueOf(str);
            //判断大小
            if(power < 0){
                JOptionPane.showMessageDialog(null, "请输的功率值无效！", "提示消息",JOptionPane.WARNING_MESSAGE); 
                return;
            }
            btn.setText(str);
            DataUtils.powerMap.put(num,power);
            //判断是否过载
            if(power > socketMaxPower){
                deviceStatus.put(num, DataUtils.OVER_LOAD); //状态修改为过载
                logFrame.addLogTxt("插座号："+ num +" 过载变为状态");
            }
        }catch(NumberFormatException e){
             JOptionPane.showMessageDialog(null, "请输的功率值无效！", "提示消息",JOptionPane.WARNING_MESSAGE); 
        }
    }
    
    
    
    /**
     * 设置浮充状态
     * @param num 
     */
    public void fuchong(Integer num){
        if(!isConnected){
            JOptionPane.showMessageDialog(null, "未连接服务器！", "提示消息",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
        //设置为浮充
         deviceStatus.put(num, DataUtils.TRICKLE);
       
    }
    
    
     /**
     * 设置短路状态
     * @param num 
     */
    public void duanlu(Integer num){
        if(!isConnected){
            JOptionPane.showMessageDialog(null, "未连接服务器！", "提示消息",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
        //设置为短路
        deviceStatus.put(num, DataUtils.OVERLOAD_PROTECTION);
    }
    
    
    /**
     * 显示二维码
     * @param number 
     */
    public void showCode(String number) {
        if (codeFrame == null) {
            codeFrame = new JFrame();
            codeFrame.setTitle("二维码");
            codeFrame.setSize(400, 450);
            // 设置显示的位置
            int screen_width = Toolkit.getDefaultToolkit().getScreenSize().width;
            int screen_height = Toolkit.getDefaultToolkit().getScreenSize().height;
            codeFrame.setLocation((screen_width - codeFrame.getWidth()) / 2, (screen_height - codeFrame.getHeight()) / 2);
            codeFrame.setLocationRelativeTo(null);
            codePanel = new JPanel();
        }
        String code = "http://charger.j1st.io/qrcode?deviceNumber="+number;
        String path = "code.png";
        ImageIcon icon = new ImageIcon(StringUtils.encode(code, path, 400, 400));
        codeLab.setIcon(icon);
        codeLab.setSize(400, 400);
        codeLab.repaint();
        codePanel.add(codeLab);
        codePanel.setOpaque(false);

        codeFrame.add(codePanel);
        codeFrame.setVisible(true);
    }
    
    /**
     * 初始化连接配置
     */
    public boolean initConnectInfo(){
        String host = this.txtHost.getText().trim();
        String userName = this.txtUserName.getText().trim();
        String password = this.txtPassword.getText().trim();
        if(StringUtils.isBlack(host)){
            JOptionPane.showMessageDialog(null, "请输入连接主机信息！", "提示消息",JOptionPane.WARNING_MESSAGE); 
            return false;
        }
        if(StringUtils.isBlack(userName)){
            JOptionPane.showMessageDialog(null, "请输入连接名称！", "提示消息",JOptionPane.WARNING_MESSAGE); 
            return false;
        }
        if(StringUtils.isBlack(password)){
            JOptionPane.showMessageDialog(null, "请输入连接密码！", "提示消息",JOptionPane.WARNING_MESSAGE); 
            return false;
        }
        client.host = host;
        client.clientId = userName;
        client.userName = userName;
        client.passWord = password;
        return true;
    }
    
    
    /**
     * 定时上报设备的状态
     */
    public void upstreamDeviceStatus(){
        upstreamDeviceStatusThread = new Thread(){
           @Override
           public void run() {
              // compute primes larger than minPrime
                while(true){
                    if(threadFlag){
                        try {
                            Thread.sleep(60 * 1000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(ChargerFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                         //上发设备状态到平台
                         String upstreamDeviceStatusData = MessageUtils.getUpstreamDeviceStatusData(deviceStatus);
                         try {
                             client.publishMessage(upstreamDeviceStatusData);
                         } catch (MqttException ex) {
                             Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
                         }
                    }
               }
            }  
        };
        upstreamDeviceStatusThread.start();
    }
    
    /**
     * 断开或关闭时保存设备数据
     */
    public void saveDeviceData(){
        Gson gson = new Gson();
        Map<String,Map> dataMap = new HashMap();
        dataMap.put("statusMap", ChargerFrame.deviceStatus);
        dataMap.put("statusMap", DataUtils.electricalStatus);
        String json = gson.toJson(dataMap);
        FileUtils.writeTxtFile(this.txtUserName.getText()+".txt",json);
    }
    
    /**
     * 初始化插座的状态为空闲中
     */
    public void initSocketStatus(){
        deviceStatus.put(1, DataUtils.FREE);
        deviceStatus.put(2, DataUtils.FREE);
        deviceStatus.put(3, DataUtils.FREE);
        deviceStatus.put(4, DataUtils.FREE);
        deviceStatus.put(5, DataUtils.FREE);
        deviceStatus.put(6, DataUtils.FREE);
        deviceStatus.put(7, DataUtils.FREE);
        deviceStatus.put(8, DataUtils.FREE);
        deviceStatus.put(9, DataUtils.FREE);
        deviceStatus.put(10, DataUtils.FREE);
    }

    
    /**
     * 断开连接
     */
    public void disconnectServer(){
        //插座设置为默认颜色
        for(Integer num : deviceStatus.keySet()){
            setButtonColor(num,backColor);
        }
        saveDeviceData();
        //清除状态数据
        deviceStatus.clear();
        
        this.btnConnect.setEnabled(true);
        this.btnDisconnect.setEnabled(false);
        //上发状态线程停止
        threadFlag = false;
        
        
        
    }
    
    
    /**
     * 同步插座的颜色
     */
    public void initSocketButtonColor(){
        for(Integer socket : deviceStatus.keySet()){
            if(deviceStatus.get(socket) == DataUtils.CHARGE){
                setButtonColor(socket,greenColor);
                break;
            }else if(DataUtils.electricalStatus.get(socket)){
                setButtonColor(socket,accessColor);
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChargerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChargerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChargerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChargerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        chargerFrame = new ChargerFrame();
        chargerFrame.setLocationRelativeTo(null);
        chargerFrame.setVisible(true);
    }
    
    
    //Button Color
    public static Color backColor = new Color(204,204,204);
    public static Color greenColor = Color.GREEN;
    //接入用电器后的颜色
    public static Color accessColor = Color.YELLOW;
    
    //MqClient 对象
    public static MqClient client = new MqClient();
    //连接状态
    public static Boolean isConnected = false;
    //定时上发设备状态线程
    Thread upstreamDeviceStatusThread;
    public static boolean threadFlag = true;
    
    //定义插座
    public static Map<Integer,Integer> deviceStatus = new TreeMap<>();
    //按钮切换当前插座号（默认无）
    Integer currentSocket = null;
    //当前操作的按钮编号 （1，2，3，4）
    Integer currentButton = null;
    
    //按钮定义
    final Integer BUTTON_SOCKET = 1;
    final Integer BUTTON_IC = 2;
    final Integer BUTTON_PAY = 3;
    
    //主窗体对象
    public static ChargerFrame chargerFrame = null;
   //日志窗口
    public static LogFrame logFrame = new LogFrame();
    
    
    //显示二维码
    public JFrame codeFrame = null;
    // 显示二给码的窗体
    public JPanel codePanel;
    JLabel codeLab = new JLabel();
    
    //单子插座最大功率
    public Integer socketMaxPower = 1000;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton butLog;
    private javax.swing.JPanel button_panel;
    private javax.swing.JPanel connectPanel;
    private javax.swing.JButton duanlu_1;
    private javax.swing.JButton duanlu_10;
    private javax.swing.JButton duanlu_2;
    private javax.swing.JButton duanlu_3;
    private javax.swing.JButton duanlu_4;
    private javax.swing.JButton duanlu_5;
    private javax.swing.JButton duanlu_6;
    private javax.swing.JButton duanlu_7;
    private javax.swing.JButton duanlu_8;
    private javax.swing.JButton duanlu_9;
    private javax.swing.JPanel duanlu_panel;
    private javax.swing.JButton fuchong_1;
    private javax.swing.JButton fuchong_10;
    private javax.swing.JButton fuchong_2;
    private javax.swing.JButton fuchong_3;
    private javax.swing.JButton fuchong_4;
    private javax.swing.JButton fuchong_5;
    private javax.swing.JButton fuchong_6;
    private javax.swing.JButton fuchong_7;
    private javax.swing.JButton fuchong_8;
    private javax.swing.JButton fuchong_9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem menuItemConfig;
    private javax.swing.JButton power_1;
    private javax.swing.JButton power_10;
    private javax.swing.JButton power_2;
    private javax.swing.JButton power_3;
    private javax.swing.JButton power_4;
    private javax.swing.JButton power_5;
    private javax.swing.JButton power_6;
    private javax.swing.JButton power_7;
    private javax.swing.JButton power_8;
    private javax.swing.JButton power_9;
    private javax.swing.JPanel power_panel;
    private javax.swing.JButton qcodeBtn;
    private javax.swing.JButton socket_1;
    private javax.swing.JButton socket_10;
    private javax.swing.JButton socket_2;
    private javax.swing.JButton socket_3;
    private javax.swing.JButton socket_4;
    private javax.swing.JButton socket_5;
    private javax.swing.JButton socket_6;
    private javax.swing.JButton socket_7;
    private javax.swing.JButton socket_8;
    private javax.swing.JButton socket_9;
    private javax.swing.JPanel socket_panel;
    private javax.swing.JTextField txtChargerNumber;
    private javax.swing.JTextField txtHost;
    private javax.swing.JLabel txtInfo;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
